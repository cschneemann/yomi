# Uyuni Form for the Yomi pillar data - Storage and filesystem
#
# Find mode pillar examples in /usr/share/yomi/pillar

partitions:
  $type: group
  $help: Partiton (Storage) Subsection for the Yomi Formula
  config:
    $type: group
    $help: Configuration options for the partitioner
    label:
      $type: select
      $values:
        # - aix
        # - amiga
        # - bsd
        # - dvh
        - gpt
        # - mac
        - msdos
        # - pc98
        # - sun
        # - loop
      $default: gpt
      $help: Default type of partition table for the device
    initial_gap:
      $type: text
      $optional: yes
      $default: 0
      $help: Initial gap (empty space) leaved before the first partition. Valid units are s, B, kB, MB, GB, TB, compact, cyl, chs, %, kiB, MiB, GiB, TiB
  devices:
    $type: edit-group
    $minItems: 1
    $itemName: Device ${i}
    $help: List of (physical or logical) devices
    $prototype:
      $type: group
      $key:
        $name: Device
        $type: text
        $placeholder: /dev/sda
        $help: Device name. Names like /dev/disk/by-id/... or /dev/disk/by-label/... can be used
      label:
        $type: select
        $values:
          # - aix
          # - amiga
          # - bsd
          # - dvh
          - gpt
          # - mac
          - msdos
          # - pc98
          # - sun
          # - loop
        $default: gpt
        $help: Type of partition table for the device
      initial_gap:
        $type: text
        $optional: yes
        $default: 1MB
        $help: Initial gap (empty space) leaved before the first partition. Valid units are s, B, kB, MB, GB, TB, compact, cyl, chs, %, kiB, MiB, GiB, TiB
      partitions:
        $type: edit-group
        $minItems: 0
        $itemName: Partition ${i}
        $help: List of partitions for the device
        $prototype:
          number:
            $name: Partition Number
            $type: number
            $optional: yes
            # $default: ${i}
            $help: Will be appended to the device name (E.g. /dev/sda1 for devide /dev/sda and partition number 1)
          id:
            $name: Partition Name
            $type: text
            $optional: yes
            $placeholder: /dev/sda1
            $help: "Full name of the partition. For example, valid ids can be /dev/sda1, /dev/md0p1, etc. Is optional, as the name can be deduced from 'Partition Number'"
          size:
            $name: Partition Size
            $type: text
            $placeholder: "Parted units or 'rest': 500MB"
            $help: "Valid units are s, B, kB, MB, GB, TB, compact, cyl, chs, %, kiB, MiB, GiB, TiB. Use 'rest' to indicate the rest of the free space"
          type:
            $name: Partition Type
            $type: select
            $values:
              - swap
              - linux
              - boot
              - efi
              - lvm
              - raid
            $default: linux
            $help: Indicate the expected use of the partition

lvm:
  $type: edit-group
  $minItems: 0
  $itemName: Volume Group ${i}
  $help: LVM (Storage) Subsection for the Yomi Formula
  $prototype:
    $type: group
    $key:
      $name: Volume Group Name
      $type: text
      $help: Name of the logical volume
    devices:
      $type: edit-group
      $minItems: 1
      $itemName: Device or Partition ${i}
      $help: List of devices or partitions that belong to the volume
      $prototype:
        name:
          $name: Device or Partition
          $type: text
          $placeholder: /dev/sda1
          $help: Device or Partition with type LVM
        bootloaderareasize:
          $name: Boot Loader Area Size
          $type: text
          $optional: yes
          $help: "Directly passed to 'pvcreate'"
        dataaligment:
          $name: Data Aligment
          $type: text
          $optional: yes
          $help: "Directly passed to 'pvcreate'"
        dataalignmentoffset:
          $name: Data Aligment Offset
          $type: text
          $optional: yes
          $help: "Directly passed to 'pvcreate'"
    volumes:
      $type: edit-group
      $minItems: 1
      $itemName: Logical Volume ${i}
      $help: List of logical volumes
      $prototype:
        name:
          $name: Logical Volume Name
          $type: text
          $placeholder: root
          $help: Name of the logical volume
        extents:
          $type: text
          $optional: yes
          $placeholder: 100%FREE
          $help: "Directly passed to 'lvcreate'"
        size:
          $type: text
          $optional: yes
          $placeholder: 1024M
          $help: "Directly passed to 'lvcreate'"
        stripes:
          $type: number
          $optional: yes
          $help: "Directly passed to 'lvcreate'"
        stripesize:
          $name: Stripe Size
          $type: number
          $optional: yes
          $help: "Directly passed to 'lvcreate'"
        # There are more options that we can implement for LVM
    clustered:
      $type: select
      $optional: yes
      $values:
        - "y"
        - "n"
      $default: "n"
      $help: "Directly passed to 'vgcreate'"
    maxlogicalvolumes:
      $name: Max Logical Volumes
      $type: number
      $optional: yes
      $help: "Directly passed to 'vgcreate'"
    maxphysicalvolumes:
      $name: Max Physical Volumes
      $type: number
      $optional: yes
      $help: "Directly passed to 'vgcreate'"
    physicalextentsize:
      $name: Physical Extent Size
      $type: text
      $optional: yes
      $help: "Directly passed to 'vgcreate'"

raid:
  $type: edit-group
  $minItems: 0
  $itemName: RAID ${i}
  $help: RAID (Storage) Subsection for the Yomi Formula
  $prototype:
    $type: group
    $key:
      $name: RAID Device Name
      $type: text
      $placeholder: /dev/md0
      $help: Name of the RAID device
    level:
      $type: select
      $values:
        - linear
        - raid0
        - raid1
        - mirror
        - raid4
        - raid5
        - raid6
        - raid10
        - multipath
        - faulty
        - container
      $default: raid1
      $help: RAID type
    devices:
      $type: edit-group
      $minItems: 1
      $itemName: Device or Partition ${i}
      $help: List of devices or partitions that belong to the RAID
      $prototype:
        name:
          $name: Device or Partition
          $type: text
          $placeholder: /dev/sda1
          $help: Device or partition with type RAID
    metadata:
      $type: select
      $values:
        - 0
        - 0.9
        - 1
        - 1.1
        - 1.2
        - default
        - ddm
        - imsm
      $default: default
      $help: RAID metadata version
    raid-devices:
      $type: number
      $optional: yes
      $help: Number of active devices in array
    spare-devices:
      $type: number
      $optional: yes
      $help: Number of spare (eXtra) devices in initial array

filesystems:
  $type: edit-group
  $minItems: 1
  $itemName: Filesystem ${i}
  $help: File System (Storage) Subsection for the Yomi Formula
  $prototype:
    $type: group
    $key:
      $name: Partition
      $type: text
      $placeholder: /dev/sda1
      $help: Partition for the filesystem
    filesystem:
      $type: select
      $values:
        - swap
        - btrfs
        - ext2
        - ext3
        - ext4
        - vfat
      $default: ext4
      $help: Filesystem for the device
    mountpoint:
      $type: text
      $placeholder: /
      $help: Mount point of the partition
    fat:
      $name: FAT Type
      $type: select
      $values:
        - 12
        - 16
        - 32
      $visibleIf: .filesystem == vfat
      $help: Type of FAT
    subvolumes:
      $name: BtrFS Subvolumes
      $type: group
      $visibleIf: .filesystem == btrfs
      $help: List of Btrfs subvolumes
      prefix:
        $type: text
        $placeholder: '@'
        $help: Btrfs subvolume prefix
      subvolume:
        $type: edit-group
        $minItems: 0
        $itemName: Subvolume ${i}
        $visibleIf: .prefix != ""
        $help: Subvolume description
        $prototype:
          path:
            $type: text
            $placeholder: /root
            $help: Path for the subvolume
          copy_on_write:
            $type: boolean
            $default: yes
            $help: CoW flag
